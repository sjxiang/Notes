# 数据库 MySQL

# 1
# 认识 MySQL

    net start MYSQL57
    net stop MYSQL57 # 关闭 server

    cd C:\Program Files\MySQL\MySQL Server 5.7\bin   # 环境变量(快捷方式，略)
    mysql -hlocalhost -uroot -p123456
    exit # 关闭 client


    client 与 server 建立连接
        TCP/IP
        命名管道和共享内存
        Unix 域套接字


    server 处理 client 请求
        MySQL server
            连接管理
                处理连接

            解析与优化
                查询缓存(不推荐)

                语法解析
                    编译原理

                查询优化

        存储引擎
            MyISAM、InnoDB(默认)、Memory ...
            对存储的数据，进行读取或者写入工作

        文件系统

# 2
# MySQL server 启动选项和系统变量
    启动选项
        'mysql -hlocalhost -uroot -p123456 ...'

        CLI 的长短形式，例：
            -hlocolhost
            --host=localhost

        配置文件
            长久使用

        ps：启动选项优先配置文件


    系统变量
        两者迥异

        查看 SHOW VARIABLES LIKE '待匹配模式'

        设置 scope


    状态变量
        SHOW STATUS LIKE '待匹配模式'



# 3
# 字符集和比较规则 -- 乱码
    字符集
        硬盘只能存储二进制数据，那该如何存储字符串?
            建立二进制数据与字符的映射关系
                Q1. 哪些字符映射为二进制?
                A：界定字符范围

                Q2. 如何映射?
                A：
                    字符   ->  二进制  (编码)
                    二进制 ->  字符    (解码)

            字符集
                描述某个字符范围的编码规则
                例：'A' - '00000001'

            比较规则
                换言之，排序
                    'a' vs. 'A'

            不同字符集比较规则不同，且一个字符集可能有多种比较规则


    MySQL
        查看支持的字符集和比较规则
            SHOW CHARSET
            SHOW COLLATION

            不同级别字符集和比较规则
                节省空间

            字符集转换
                client - server 中间转换 3 个字符集

        比较规则的应用
            查询排序 ORDER BY
            比较字符串大小


# 4
# InnoDB 记录存储结构 -- 从一条记录说起
    Q：第 1 篇对 MySQL 有了整体认识
       client - server
       那么数据是如何存储的呢 ?

    A：InnoDB 存储引擎把数据(表中的)存储在磁盘上

       读取或者写入
       处理数据在内存
            把磁盘中的数据加载到内存
            处理写入或者修改，还需要再把内存的内容再刷新到磁盘

            记录是如何读取？yitiaoyitiao

            将数据划分若干个页，作为磁盘和内存交互的基本单位，InnoDB 中页大小 16 KB.

        磁盘 内存
        行溢出
        一个页一般是16KB，当记录中的数据太多，当前页放不下的时候，
    会把多余的数据存储到其他页中，这种现象称为。

    InnoDB 记录格式
        以记录为单位往表中插入数据，在磁盘上的存放方式也被成为记录格式，亦或行格式。

        记录在磁盘的存放格式
            记录的额外信息 + 真实数据
            Compact 为例
                变长字段长度列表 、NULL 值列表 、记录头信息


# 5
# InnoDB 数据页结构 -- 盛放记录的盒子
    页(Page) 是 InnoDB 管理存储空间的基本单位
    InnoDB 为了不同的目的而设计了不同类型的页
    我们把用于存放记录的页叫做数据页。

    数据页可以被划分为 7 个部分：
        略(但可以得出以下逻辑结论)


        记录 - 记录 - .. (主键，单链表)

        若干个记录
        槽(偏移地址)
        页目录

        数据页 = 数据页 = ..(页码，双向链表)

        查找：二分法 + 遍历



# 6
# B+ Tree 索引 -- 快速查询
    没有索引的查找

    索引



# 7
# B+ Tree 索引的使用 -- 好东西，要会用。


# 8
# MySQL 的数据目录
    InnoDB、MyISAM 具体如何把数据存储在磁盘，专业一点叫文件系统
    略
    视图，即虚拟的表、查询语句的别名。

# 9
# InnoDB 的表空间 -- 存放页面的大池子


# 10
# 单表访问方法

# 11
# 连接的原理


# 12
# MySQL 基于成本的优化


# 13
# InnoDB 统计数据是如何收集的


# 14
# MySQL 基于规则的优化


# 15
# Explain 详解


# 16
# optimizer trace


# 17
# InnoDB 的 Buffer


# 18
# 事务


# 19
# redo 日志


# 20
# undo 日志


# 21
# 事务的隔离级别 与 MVCC



# 22
# 锁