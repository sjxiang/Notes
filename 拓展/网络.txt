# SDWAN 技术与应用
# 网络基础篇
    1. 互联网体系架构
    2. IPv6 与 互联网认知黑洞
    3. IP 路由技术 -- 穿透网络迷雾
    4. TCP & BBR -- 如何应对不确定性

# 预备篇
    5. 数据中心网络 SDN
    6. TCP 加速与 CDN 陨坑



TCP/IP 体系架构

    体系结构就是看待世界的逻辑，即世界观；而不是协议的集合。
    TCP/IP 体系架构 -> 开放互联
    生于简单，死于优化。

    为什么 端到端 ?
        管理平面

    Everything over IP
        标签 背后 资源调度的媒介
        黄金，绸缎

    基础设施
        三段论
        逐渐沉淀，中立；不会出现暴利

    如何定义平台型公司?
        - (封闭 + 最优化)



IPv6
    低成本，而不是什么 IPv4 地址不够。

    IP ID -> 应用层 ID

    互联网演进定律：
        向后兼容
        成本低廉
        降维打击

    从以网络为中心向以服务为中心
    资源与服务充分池化并加速全球流动

    网络治理
        如何以低成本零冲突方式
        适应资源流动新常态

        5G VS. 小区宽带

        选择 IPv6，类似




IP Routing
    路由协议关键
        与谁交换信息
        交换什么xinx
        如何交换信息


TCP
    从不确定性中寻找确定性

    基本功能：
        连接管理
            三次握手，四次挥手。(建立连接、拆除连接)

            什么是连接? 连接管理管什么?
                网络会话的系列状态(建立、拆除...)


            逐渐演变：
                累积确认 ack

                receiver 只告知 sender 已收到数据
                反复提醒

                sender 继续发? 等 or 不等
                    RTT(在路上 or 丢失)
                    sender无法甄别

                那就两个字，傻等


        超时与重传
            RTT
                字节流 颗粒度小 抖动剧烈 不精确

            测量?
                一系列艹蛋算法 复杂性

                RTT 是真的吗?
                    缓存(e.g. 瑞幸咖啡)
                    噪声

                统计分析?
                    隐含的前提、预期

                    测不准定律 比精确更重要的是明确的预期


        流量控制
            发送速率 滑动窗口(e.g. 弹夹)
                "一桶水泼下去"

        拥塞控制
            凡有丢包，必为拥塞。

            至少 "50%" 带宽利用率



BBR
    背景不同
    设计原则：
        控制自己行为，避免出现 RTT 一直增加，IO 吞吐量并没有增加。
        忽视丢包(20% 宕机)

        BDP = (max BW) * (min RTT)  时延带宽机
        BBR，统计 VS. TCP，计时






